version: '3.8'

services:
  php:
    image: ${PROJECT_NAME:-kafka_examples}_php
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        PHP_USER: ${PHP_USER:-phpuser}
        PHP_UID: ${PHP_UID:-1000}
        PHP_GID: ${PHP_GID:-1000}
    container_name: ${PROJECT_NAME:-kafka_examples}_php
    volumes:
      - ./php:/var/www/html
    depends_on:
      - kafka
    networks:
      - kafka-network
  golang:
    image: ${PROJECT_NAME:-kafka_examples}_golang
    build:
      context: .
      dockerfile: ./docker/golang/Dockerfile
    container_name: ${PROJECT_NAME:-kafka_examples}_golang
    volumes:
      - ./golang:/app
    depends_on:
      - kafka
    networks:
      - kafka-network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ${PROJECT_NAME:-kafka_examples}_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ${PROJECT_NAME:-kafka_examples}_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  # Schema Registry для работы с Avro схемами
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: ${PROJECT_NAME:-kafka_examples}_schema_registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - kafka-network

  # Веб-интерфейс для Kafka
  kafka-ui:
    image: tchiotludo/akhq:latest
    container_name: ${PROJECT_NAME:-kafka_examples}_kafka_ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
              schema-registry:
                url: "http://schema-registry:8081"
              connect:
                - name: "connect"
                  url: "http://connect:8083"
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
